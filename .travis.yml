sudo: required

services:
  - docker

language: cpp

dist: trusty

env:
  global:
    # GitHub token for pushing the documentation, logging in with the
    # Travis command line utility and so on. The token is stored in the
    # ${SECRET_ACCESS_TOKEN} environment variable.
    - secure: Vmw+Hg9AxtivUH6N7FOlm17gHdENPmpoGhnetRslQM8p6UlK/HrsigS8ektD3FagVyn0BeMIU896aQgCCCV+cXSIFqyk2gS6LRvTC8M8QMkD5VtGvN8NCoUoEU+aCiOv/nI33p54787/4AnxSAgIFrGNUZf5ogKckJbnIwgDw0Iz1L8HPb2tnTb2Y7G+qSp+g+QpJh+mcTLXzTBFJ0irPIVvn15EBZtvV3avVSuiZY+PidUJnZLm/CNJnwysY9QuBDTJRPUSVbGr23vrCDVrCNl5YvnlVFY4TJzM+l4x0Ln6Y1lrvLRmp7VUS9aIf8NQ99X/txOMIPt/YMkiQSLdGI4R2FvcjtsWN+UnG93H+KIGWcggSKUkradmuY6pwB0GWjXUGjzKaDIrgUs9b3VUTdxscBKmW+/bFZBOF3m5/71lGiKNSJ6N21vlwWiXdgX5Y2mOCIzD4dFrgfiCUCEM6ISIx6RZzWvw5wYPxjoLF/eNywKtMODlQdo9170ckh26zctA3nLvwi+zOcMNqUTg+r4/eMPf0W99P2gih5kdx9WqWzKMQdVrGDDy/GlOi6gb2tUcsagCYxhD7KJ4Ejl16ogENXFBb28dH8RX3r7CPdlav2yDA+TYzqQmtYENEFUIVxCT1XNORD2/bZ2qcNI2qmmANubEBUHwGPhWc49WOQw=

cache:
  directories:
    - llvm-3.8.0
    - llvm-3.7.1
    - llvm-3.6.2
    - llvm-3.5.2

addons:
  apt:
    sources:
      - boost-latest
      - george-edison55-precise-backports
#      - llvm-toolchain-precise
#      - llvm-toolchain-precise-3.6
#      - llvm-toolchain-precise-3.7
#      - llvm-toolchain-precise-3.8
      - ubuntu-toolchain-r-test
    packages:
      - cmake
      - cmake-data
      - doxygen
      - libboost1.55-all-dev
      - g++-4.9
      - g++-5
#      - clang-3.6
#      - clang-3.7
#      - clang-3.8
      - time

matrix:
  include:
#    - os: linux
#      env: LLVM_VERSION=3.6.2 USE=clang++-3.6 BUILD_TYPE=Debug
#    - os: linux
#      env: LLVM_VERSION=3.6.2 USE=clang++-3.6 BUILD_TYPE=Release


#    - os: linux
#      env: LLVM_VERSION=3.7.1 USE=clang++-3.7 BUILD_TYPE=Debug
#    - os: linux
#      env: LLVM_VERSION=3.7.1 USE=clang++-3.7 BUILD_TYPE=Release


#    - os: linux
#      env: LLVM_VERSION=3.8.0 USE=clang++-3.8 BUILD_TYPE=Debug
#    - os: linux
#      env: LLVM_VERSION=3.8.0 USE=clang++-3.8 BUILD_TYPE=Release

    - os: linux
      env: USE=g++-5 DOCKER=true BUILD_TYPE=Release

    - os: linux
      env: USE=g++-5 DOCUMENTATION=true BUILD_TYPE=Release


    - os: linux
      env: USE=g++-4.9 BUILD_TYPE=Debug
    - os: linux
      env: USE=g++-4.9 BUILD_TYPE=Release

    - os: linux
      env: USE=g++-5 BUILD_TYPE=Debug
    - os: linux
      env: USE=g++-5 BUILD_TYPE=Release



before_script:
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
       if [[ "${DOCKER}" == "true" ]]; then 
         cd ${TRAVIS_BUILD_DIR} ;
         docker build -t geneial/geneial . ;
         docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
         docker push geneial/geneial;
         exit;
       fi;
    fi

    
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      if [ -z "$(ls -A llvm-$LLVM_VERSION)" ]; then
        wget -O llvm-$LLVM_VERSION.tar.xz http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz;
        mkdir llvm-$LLVM_VERSION;
        xzcat llvm-$LLVM_VERSION.tar.xz | tar -xvf - --strip 1 -C llvm-$LLVM_VERSION;
      fi;
      llvm-$LLVM_VERSION/bin/llvm-config --version;
      export LLVM_CONFIG="llvm-$LLVM_VERSION/bin/llvm-config";
    fi



  
  ############################################################################
  # Go back to the root of the project.
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}

  ############################################################################
  # Invoke Setup Script 
  ############################################################################

  - cd .travis/ && source setup_travis.sh && cd ../

  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"

  ############################################################################
  # Check baseline memory usage; useful to know when OOMs occur
  ############################################################################
  - free
  - vmstat
  - ps aux --sort=-rss | head -n 10

  ############################################################################
  # Setup the build directory
  ############################################################################
  - mkdir build/
  - cd build/

  - if [[ "${LLVM_VERSION}" == 3* ]]; then
      echo "LLVM Build";
      cmake ../src -DLLVM_CONFIG=$(which ${LLVM_CONFIG}) -DCMAKE_BUILD_TYPE=${BUILD_TYPE};
    else
      cmake ../src -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_BUILD_TYPE=${BUILD_TYPE};
    fi


  - git config --global user.name "Travis bot"
  
  # We only use the memory checker for some builds, because otherwise it takes
  # too long for very little benefit. Concretely, if we have a memory leak or
  # something like that, it's either a compiler bug or an error that will show
  # up regardless of the Boost version. Hence, we use the memory checker only
  # once for each compiler.


script:

  ############################################################################
  # Build Project if DOCUMENTATION=true 
  ############################################################################
  
  - if [[ "${DOCUMENTATION}" != "true" ]]; then make; fi 

  ############################################################################
  # Only push the documentation when we're on master, otherwise just make sure
  # it builds properly. 
  ############################################################################
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
       if [[ "${DOCUMENTATION}" == "true" ]]; then
         make doc;
         git config --global user.email "benedikt.wolters@rwth-aachen.de";
         git config --global user.name "Travis Doxygen Builder";
         git clone https://${SECRET_ACCESS_TOKEN}@github.com/geneial/geneial.github.io.git;
         cd geneial.github.io/;
         mkdir -p doc;
         cp -r ../doc/html ./doc/;
         git add .;
         git commit -m "Updated documentation for geneial";
         git push origin master;
         exit;
       fi;
    fi

  ############################################################################
  # Build and run the unit tests and examples.
  ############################################################################
  - export CTEST_PARALLEL_LEVEL=2 # Run unit tests on two cores
  - if [[ "${UNIT_TESTS}" == "true" ]]; then make test -k -j2; fi

notifications:
  email:
    on_failure: always
    on_success: change


